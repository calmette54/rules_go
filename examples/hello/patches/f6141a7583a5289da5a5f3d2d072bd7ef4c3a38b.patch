From f6141a7583a5289da5a5f3d2d072bd7ef4c3a38b Mon Sep 17 00:00:00 2001
From: David Zbarsky <dzbarsky@gmail.com>
Date: Mon, 26 May 2025 20:23:24 -0400
Subject: [PATCH] Drop non-hermetic deps in _go_tool_binary_impl

---
 go/private/rules/binary.bzl | 50 ++++++++++++++++++-------------------
 1 file changed, 25 insertions(+), 25 deletions(-)

diff --git a/go/private/rules/binary.bzl b/go/private/rules/binary.bzl
index 064831bbe..079e4c372 100644
--- a/go/private/rules/binary.bzl
+++ b/go/private/rules/binary.bzl
@@ -485,10 +485,10 @@ def _go_tool_binary_impl(ctx):
         name += ".exe"

     out = ctx.actions.declare_file(name)
+
+    # Using pre-declared directory for temporary output to avoid needing to use shell to create it.
+    gotmp = ctx.actions.declare_directory(name + "_gotmp")
     if sdk.goos == "windows":
-        # Using pre-declared directory for temporary output as there is no safe
-        # way under Windows to create unique temporary dir.
-        gotmp = ctx.actions.declare_directory("gotmp")
         cmd = """@echo off
 set GOMAXPROCS=1
 set GOCACHE=%cd%\\{gotmp}\\gocache
@@ -523,30 +523,30 @@ exit /b %GO_EXIT_CODE%
             mnemonic = "GoToolchainBinaryBuild",
         )
     else:
-        # Note: GOPATH is needed for Go 1.16.
-        cmd = """
-GOTMP=$(mktemp -d)
-trap "rm -rf \"$GOTMP\"" EXIT
-GOMAXPROCS=1 \
-GOCACHE="$GOTMP"/gocache \
-GOPATH="$GOTMP"/gopath \
-GOTOOLCHAIN=local \
-GO111MODULE=off \
-{go} build -o {out} -trimpath -ldflags '-buildid="" {ldflags}' {srcs}
-""".format(
-            go = sdk.go.path,
-            out = out.path,
-            srcs = " ".join([f.path for f in ctx.files.srcs]),
-            ldflags = ctx.attr.ldflags,
-        )
-        ctx.actions.run_shell(
-            command = cmd,
-            tools = depset(
-                ctx.files.srcs + [sdk.go],
+        args = ctx.actions.args()
+        args.add("build")
+        args.add("-o", out)
+        args.add("-trimpath")
+        args.add("-ldflags", ctx.attr.ldflags, format = '-buildid="" %s')
+        args.add_all(ctx.files.srcs)
+
+        ctx.actions.run(
+            executable = sdk.go,
+            arguments = [args],
+            env = {
+                "GOMAXPROCS": "1",
+                "GOTOOLCHAIN": "local",
+                "GO111MODULE": "off",
+                # GOCACHE and GOPATH will default themselves to locations under $HOME.
+                # Otherwise we would need to set them explicitly, in which case they must be absolute paths.
+                # That would require a wrapper script/shell dependency.
+                "HOME": gotmp.path,
+            },
+            inputs = depset(
+                ctx.files.srcs,
                 transitive = [sdk.headers, sdk.srcs, sdk.libs, sdk.tools],
             ),
-            toolchain = None,
-            outputs = [out],
+            outputs = [out, gotmp],
             mnemonic = "GoToolchainBinaryBuild",
         )

